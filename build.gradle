apply plugin: 'maven'
apply plugin: 'jacoco'
apply plugin: 'eclipse-wtp'
apply plugin: 'java'

group = 'ca.umanitoba.dam.rdfhashing'

repositories {
    mavenCentral()
    mavenLocal()
}

// Java 8 only
sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    
    buildName = "java-rdf-hashing"
    versions = [
    		commonsCli : '1.4',
    		commonsIo : '1.3.2',
            jenaRdf : '0.5.0',
            logback : '1.2.3',
            junit : '5.3.0'
    ]
}

dependencies {
	compile group: 'commons-cli', name: 'commons-cli', version: versions.commonsCli
    compile group: 'org.apache.commons', name: 'commons-rdf-jena', version: versions.jenaRdf
    compile group: 'ch.qos.logback', name: 'logback-classic', version: versions.logback
    
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
	testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit
	testRuntime group: 'org.apache.commons', name: 'commons-io', version: versions.commonsIo
}

// Make a sources jar (if you want it)
task sourceJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier 'javadoc'
    from javadoc
}

artifacts {
    archives javadocJar
    archives sourceJar
}

//sourceSets {
//    test {
//        java {
//            srcDir 'src/test/java'
//        }
//        resources {
//            srcDir "src/test/resources"
//        }
//    }
//}

// Make our JAR file
jar {
    manifest {
    		attributes 'Implementation-Title': project.description,
    			'Implementation-Version': project.version,
    			'Main-Class': project.group + '.RdfHash'
    }
    // This is a fatjar with all dependencies included.
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

test {
	// Requires gradle 4.6 or greater
	useJUnitPlatform()
    testLogging {
        // Make sure output from
        // standard out or error is shown
        // in Gradle output.
        // showStandardStreams = true
        //events 'standard_out', 'standard_error'
        events "passed", "skipped", "failed"
        
        exceptionFormat = 'full'
    }
}

